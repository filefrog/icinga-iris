#!/usr/bin/perl

sub repeat
{
	my ($s, $max) = @_;
	my $mult = int($max / length($s)) + 1; # +1 for good measure
	my $out = $s x $mult;
	return substr($out, 0, $max);
}

my $DIR = shift @ARGV;
qx(/bin/rm -rf $DIR);
qx(/bin/mkdir -p $DIR);

my $fh;

#### Normal, correct packet input
open $fh, ">", "$DIR/normal"
	or die "$DIR/normal: $!";
print $fh <<EOF;
host1\tcpu\t0\tOK - CPU is good\x17
host1\tdisk\t1\tWARNING - disks are filling up\x17
host1\tload\t2\tCRITICAL - load is too high\x17
EOF
close $fh;

#### Arbitrary garbage data
open $fh, ">", "$DIR/garbage"
	or die "$DIR/garbage: $!";
print $fh <<EOF;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus aliquam
luctus facilisis. Duis ac arcu urna, vel viverra lacus. Aenean pharetra
scelerisque augue, at volutpat erat condimentum congue. Morbi placerat
pulvinar ornare. Pellentesque habitant morbi tristique senectus et netus et
malesuada fames ac turpis egestas. Nullam venenatis auctor venenatis.
Integer iaculis urna non justo commodo tempus. Vestibulum pulvinar euismod
eros, ac volutpat risus sollicitudin varius. Donec eros magna, porttitor
eget interdum nec, tempor eu libero. Integer aliquet consequat facilisis.
Proin sit amet dolor a leo tincidunt suscipit. Cras mi odio, vulputate quis
consectetur eget, vehicula ac lorem. Sed volutpat, tellus vitae dictum
facilisis, justo dolor porta velit, quis adipiscing tortor nisl eget lacus.
Vestibulum ac enim nisi.
EOF
close $fh;

#### Arbitrary garbage data (#2 - leading tabs only)
open $fh, ">", "$DIR/garbage2"
	or die "$DIR/garbage1: $!";
print $fh <<EOF;
\t\tLorem ipsum dolor sit amet
EOF
close $fh;

#### ETBs
open my $fh, ">", "$DIR/etb"
	or die "$DIR/etb: $!";
print $fh "\x17 ETB \x17 ETB \x17\x17\x17";
close $fh;

#### Extra tabs
open $fh, ">", "$DIR/extra"
	or die "$DIR/extra: $!";
print $fh <<EOF;
host\tservice\t0\tOK\tmessage with a tab\x17
EOF
close $fh;

#### Missing tabs
open $fh, ">", "$DIR/missing"
	or die "$DIR/missing: $!";
print $fh <<EOF;
host\tserv\x17
EOF
close $fh;

#### Jumbo-sized fields
open $fh, ">", "$DIR/jumbo"
	or die "$DIR/jumbo: $!";
print $fh repeat("host.a41.", 70); # max is 64
print $fh "\t";
print $fh repeat("service.v^v^v:", 140); # max is 128
print $fh "\t1\t";
print $fh repeat("all work and no play make jack a dull boy. ", 5100); # max is 4096
print $fh "\x17";
close $fh;

#### Empty strings
open $fh, ">", "$DIR/empty"
	or die "$DIR/empty: $!";
print $fh "";
close $fh;

#### Null
open $fh, ">", "$DIR/null"
	or die "$DIR/null: $!";
print $fh "\0\0\0";
close $fh;

#### empty Fields
open $fh, ">", "$DIR/nofield"
	or die "$DIR/nofield: $!";
print $fh "\t\t\t\n\x17";

#### Big Mess
open $fh, ">", "$DIR/mess"
	or die "$DIR/mess: $!";
print $fh <<EOF;
hi.  i'm a wonky client!\x17\x01\x14\x15\x16\x17

HTTP/1.1 GET /stuff
\t\t\t\t\x17
host\tservice\t2\toutput
\x17host01.x.y.z.svcs.be.atl.synacor.com\tgdma_check_that_things_are_working\t0\tOK - all good
\x17
\n\n\n

host\tservice\t00\tdouble-zero is close, but not close enough\x17
host\tservice\t9\tbad return code 9 (>'3')\x17
host\tservice\t+\tbad return code + (< '0')\x17
EOF
close $fh;
